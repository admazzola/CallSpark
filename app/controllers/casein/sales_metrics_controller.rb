# Scaffolding generated by Casein v5.1.1.5

module Casein
  class SalesMetricsController < Casein::CaseinController
  
    ## optional filters for defining usage according to Casein::AdminUser access_levels
    # before_filter :needs_admin, :except => [:action1, :action2]
    # before_filter :needs_admin_or_current_user, :only => [:action1, :action2]
  
    def index
      @casein_page_title = 'Sales metrics'
  		@sales_metrics = SalesMetric.order(sort_order(:id)).paginate :page => params[:page]
    end
  
    def show
      @casein_page_title = 'View sales metric'
      @sales_metric = SalesMetric.find params[:id]
    end
  
    def new
      @casein_page_title = 'Add a new sales metric'
    	@sales_metric = SalesMetric.new
    end

    def create
      @sales_metric = SalesMetric.new sales_metric_params
    
      if @sales_metric.save
        flash[:notice] = 'Sales metric created'
        redirect_to casein_sales_metrics_path
      else
        flash.now[:warning] = 'There were problems when trying to create a new sales metric'
        render :action => :new
      end
    end
  
    def update
      @casein_page_title = 'Update sales metric'
      
      @sales_metric = SalesMetric.find params[:id]
    
      if @sales_metric.update_attributes sales_metric_params
        flash[:notice] = 'Sales metric has been updated'
        redirect_to casein_sales_metrics_path
      else
        flash.now[:warning] = 'There were problems when trying to update this sales metric'
        render :action => :show
      end
    end
 
    def destroy
      @sales_metric = SalesMetric.find params[:id]

      @sales_metric.destroy
      flash[:notice] = 'Sales metric has been deleted'
      redirect_to casein_sales_metrics_path
    end
  
    private
      
      def sales_metric_params
        params.require(:sales_metric).permit(:id, :metric_type, :value_cents, :measured_count, :measured_id, :measured_type)
      end

  end
end