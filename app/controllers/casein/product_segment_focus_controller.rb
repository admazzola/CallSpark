# Scaffolding generated by Casein v5.1.1.5

module Casein
  class ProductSegmentFocusController < Casein::CaseinController

    ## optional filters for defining usage according to Casein::AdminUser access_levels
    # before_filter :needs_admin, :except => [:action1, :action2]
    # before_filter :needs_admin_or_current_user, :only => [:action1, :action2]

    def index
      @casein_page_title = 'Product segment focus'
  		@product_segment_focus = ProductSegmentFocus.order(sort_order(:focused_id)).paginate :page => params[:page]
    end

    def show
      @casein_page_title = 'View product segment focus'
      @product_segment_focus = ProductSegmentFocus.find params[:id]
    end

    def new
      @casein_page_title = 'Add a new product segment focus'
    	@product_segment_focus = ProductSegmentFocus.new
    end

    def create
      @product_segment_focus = ProductSegmentFocus.new product_segment_focus_params

      if @product_segment_focus.save
        flash[:notice] = 'Product segment focus created'
        redirect_to casein_product_segment_focus_path
      else
        flash.now[:warning] = 'There were problems when trying to create a new product segment focus'
        render :action => :new
      end
    end

    def update
      @casein_page_title = 'Update product segment focus'

      @product_segment_focus = ProductSegmentFocus.find params[:id]

      if @product_segment_focus.update_attributes product_segment_focus_params
        flash[:notice] = 'Product segment focus has been updated'
        redirect_to casein_product_segment_focus_path
      else
        flash.now[:warning] = 'There were problems when trying to update this product segment focus'
        render :action => :show
      end
    end

    def destroy
      @product_segment_focus = ProductSegmentFocus.find params[:id]

      @product_segment_focus.destroy
      flash[:notice] = 'Product segment focus has been deleted'
      redirect_to casein_product_segment_focus_path
    end

    private

      def product_segment_focus_params
        params.require(:product_segment_focus).permit(:focused_id, :focused_type, :product_segment_id)
      end

  end
end
